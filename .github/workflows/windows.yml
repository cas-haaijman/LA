# Main doc: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/introduction-to-github-actions
# Runners spec: https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners
# Glob expressions: https://github.com/actions/toolkit/tree/main/packages/glob

name: Windows

###############################################################################
# Schedule:
# Push on main branch
###############################################################################
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

###############################################################################
# Platform script options shared among all jobs
###############################################################################
env:
  COQREGTESTING: y

###############################################################################
# Builds Windows installer
###############################################################################
jobs:
  Windows_platform:
    name: Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        architecture:
          - "64"
        coq-platform-pick:
          - "8.20~2025.01"
        vscoq-version:
          - "2.1.5"

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Git checkout install scripts
        uses: actions/checkout@v4
        with:
          path: main

      - name: Git checkout Coq platform
        uses: actions/checkout@v4
        with:
          repository: coq/platform
          path: platform

      - name: Set switch name in coq platform
        shell: cmd
        # We need to output without a (windows style new line here) else bash will complain AND we rely on the fact that the file has a trailing new line.
        run: |
          echo | set /p dummyName="COQ_PLATFORM_SWITCH_NAME=LnA" >> platform\package_picks\coq_platform_switch_name.sh
          type platform\package_picks\coq_platform_switch_name.sh

      - name: Set default install directory
        shell: cmd
        run: |
          sed -i 's/\s\sInstallDir\s"C:\\\${MY_PRODUCT}"/  InstallDir "C:\\\cygwin_LnA\\\home\\\runneradmin\\\.opam\\\LnA"/g' platform/windows/Coq.nsi
          cat platform/windows/Coq.nsi

      # - name: Missing dependency
      #   shell: cmd
      #   run: |
      #     sed -i '/^###################### Create installer.*/i add_folder_recursively \"/home/runneradmin/.opam/LnA/\" \"lib/sexplib0\" \"files_coq-waterproof\"' platform/windows/create_installer_windows.sh
      #     cat platform/windows/create_installer_windows.sh

      - name: Run coq platform make windows
        shell: cmd
        run: platform\coq_platform_make_windows.bat -destcyg=C:\cygwin_LnA -arch=${{matrix.architecture}} -extent=x -parallel=p -jobs=2 -vst=n -compcert=n -pick="${{matrix.coq-platform-pick}}" -set-switch=y

      - name: Patch installer
        shell: cmd
        run: |
          copy main\installer\* C:\cygwin_LnA\platform\
          C:\cygwin_LnA\bin\bash --login -c "/platform/patch_installer.sh"

      - name: Install vscoq-language-server
        # if: always()
        shell: cmd
        run: |
          C:\cygwin_LnA\bin\bash --login -c "opam pin add -y vscoq-language-server.${{matrix.vscoq-version}}  https://github.com/coq-community/vscoq/releases/download/v${{matrix.vscoq-version}}/vscoq-language-server-${{matrix.vscoq-version}}.tar.gz"

      - name: Install LnA
        # if: always()
        shell: cmd
        run: |
          C:\cygwin_LnA\bin\bash --login -c "opam pin add -y main\library\"

      - name: Create installer
        # if: always()
        shell: cmd
        run: |
          tree /f
          C:\cygwin_LnA\bin\bash --login -c "cd /platform && windows/create_installer_windows.sh && mkdir /cygdrive/c/installer && cp windows_installer/*exe /cygdrive/c/installer/"

      # - name: Sign the installer
      #   if: always()
      #   run: |
      #     New-Item -ItemType directory -Path certificate
      #     Set-Content -Path certificate\certificate.txt -Value '${{ secrets.CODE_SIGNING_CERTIFICATE }}'
      #     certutil -decode certificate\certificate.txt certificate\certificate.pfx
      #     & 'C:/Program Files (x86)/Windows Kits/10/bin/10.0.17763.0/x86/signtool.exe' sign /f certificate\certificate.pfx /p '${{ secrets.CODE_SIGNING_CERTIFICATE_PASS }}' C:\installer\*.exe
      #     Remove-Item -Path certificate\*

      - name: "Upload Artifact"
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: "Windows installer ${{matrix.architecture}} bits"
          path: C:\installer\*.exe
          retention-days: 5
